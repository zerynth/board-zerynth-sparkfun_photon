/* Port definition */

////LAYOUT: sparkfun_photon
////PERIPHERALS: SERIAL0 SERIAL1 SERIAL2 ADC0 PWMD0 ICUD0 SPI0 SPI1 SPI2 I2C0 DAC0 DAC1
////CDEFINES: STM32F2xxx STM32F205 STM32F205RG BCM_BOARD_WM_N_BM_14

/* Extended GPIO mappings 
    [WICED_GPIO_SFLASH_CS  ]  = { GPIOB, 12 },
    [WICED_GPIO_SFLASH_CLK ]  = { GPIOB, 13 },
    [WICED_GPIO_SFLASH_MISO]  = { GPIOB, 14 },
    [WICED_GPIO_SFLASH_MOSI]  = { GPIOB, 15 }
*/

const PinInfo const _vhalpinmap[] STORED = {
    /* D0 */                MAKE_PIN(PA, 10, HAS_EXT | HAS_ATM | HAS_SER), // OTG_FS_ID
    /* D1 */                MAKE_PIN(PA, 9, HAS_EXT | HAS_ATM | HAS_SER),  // OTG_FS_VBUS
    /* D2 */                MAKE_PIN(PB, 5, HAS_EXT | HAS_ATM | HAS_CAN | HAS_SPI),
    /* D3 */                MAKE_PIN(PB, 4, HAS_EXT | HAS_ATM | HAS_SPI),
    /* D4 */                MAKE_PIN(PB, 3, HAS_EXT | HAS_ATM | HAS_SPI),
    /* D5 */                MAKE_PIN(PA, 15, HAS_EXT| HAS_ATM),
    /* D6 */                MAKE_PIN(PA, 14, HAS_EXT),
    /* D7 */                MAKE_PIN(PA, 13, HAS_EXT),
    /* D8 DAC */            MAKE_PIN(PA, 4, HAS_EXT | HAS_DAC | HAS_ADC),
    /* D9 WKP */            MAKE_PIN(PA, 0, HAS_EXT | HAS_ATM | HAS_ADC),
    /* D10 SS */            MAKE_PIN(PC, 2, HAS_EXT | HAS_ADC),
    /* D11 MOSI */          MAKE_PIN(PA, 7, HAS_EXT | HAS_SPI | HAS_ADC | HAS_ATM),
    /* D12 MISO */          MAKE_PIN(PA, 6, HAS_EXT | HAS_SPI | HAS_ADC | HAS_ATM),
    /* D13 SCK */           MAKE_PIN(PA, 5, HAS_EXT | HAS_SPI | HAS_ADC | HAS_DAC),
    /* D14 SDA */           MAKE_PIN(PB, 7, HAS_EXT | HAS_ATM | HAS_SER | HAS_I2C),
    /* D15 SCL */           MAKE_PIN(PB, 6, HAS_EXT | HAS_ATM | HAS_SER | HAS_I2C | HAS_CAN),

    /* D16 LED0 */          MAKE_PIN(PA, 1, HAS_EXT | HAS_PWM),
    /* D17 LED1 */          MAKE_PIN(PA, 2, HAS_EXT | HAS_PWM),
    /* D18 LED2 */          MAKE_PIN(PA, 3, HAS_EXT | HAS_PWM),
    
    /* D19 (WIFI_RST)*/     MAKE_PIN(PB, 8, HAS_EXT),
    /* D20 (WIFI_PWR)*/     MAKE_PIN(PA, 12, HAS_EXT),
    /* D21 (WSDIO_CLK)*/    MAKE_PIN(PC, 12, HAS_EXT),
    /* D22 (WSDIO_CMD)*/    MAKE_PIN(PD, 2, HAS_EXT),
    /* D23 (WSDIO_D0)*/     MAKE_PIN(PC, 8, HAS_EXT),
    /* D24 (WSDIO_D1)*/     MAKE_PIN(PC, 9, HAS_EXT),
    /* D25 (WSDIO_D2)*/     MAKE_PIN(PC, 10, HAS_EXT),
    /* D26 (WSDIO_D3)*/     MAKE_PIN(PC, 11, HAS_EXT),
    /* D27 (MCO) */         MAKE_PIN(PA, 8, HAS_EXT),

    /* D28 BTN0 */          MAKE_PIN(PC, 7, HAS_EXT),

    /* D29 SPARE1 */        MAKE_PIN(PB, 0, HAS_EXT | HAS_ATM | HAS_ADC),
    /* D30 SPARE2 */        MAKE_PIN(PB, 1, HAS_EXT | HAS_ATM | HAS_ADC),
    /* D31 SPARE3 */        MAKE_PIN(PC, 0, HAS_EXT | HAS_ADC),
    /* D32 SPARE4 */        MAKE_PIN(PC, 4, HAS_EXT | HAS_ADC),
    /* D33 SPARE5 */        MAKE_PIN(PC, 13, HAS_EXT),
    /* D34 SPARE6 */        MAKE_PIN(PC, 1, HAS_EXT | HAS_ADC),

    /* A0 */                MAKE_PIN(PC, 5, HAS_EXT | HAS_ADC),
    /* A1 */                MAKE_PIN(PC, 3, HAS_EXT | HAS_ADC),
    
    /* D37 CLK */           MAKE_PIN(PB, 13, HAS_EXT | HAS_SPI),
    /* D38 MISO */          MAKE_PIN(PB, 14, HAS_EXT | HAS_SPI),
    /* D39 MOSI */          MAKE_PIN(PB, 15, HAS_EXT | HAS_SPI),
    /* D40 CS */            MAKE_PIN(PB, 12, HAS_EXT),

    /* D41 */               MAKE_PIN(PA, 11, HAS_EXT), // OTG_FS_DM
    /* D42 */               MAKE_PIN(PA, 12, HAS_EXT), // OTG_FS_DP

};

const PinClass const _analogclass[] STORED = {
    /* A0 */        MAKE_PIN_CLASS(35, 15, 0, 0),
    /* A1 */        MAKE_PIN_CLASS(36, 13, 0, 0),
    /* A2-D10 */    MAKE_PIN_CLASS(10, 12, 0, 0),
    /* A3-D13 */    MAKE_PIN_CLASS(13, 5, 0, 0),
    /* A4-D12 */    MAKE_PIN_CLASS(12, 6, 0, 0),
    /* A5-D11 */    MAKE_PIN_CLASS(11, 7, 0, 0),
    /* D8 */        MAKE_PIN_CLASS(8, 4, 0, 0),
    /* D9 */        MAKE_PIN_CLASS(9, 0, 0, 0),
    /* D29 */       MAKE_PIN_CLASS(29, 8, 0, 0),
    /* D30 */       MAKE_PIN_CLASS(30, 9, 0, 0),
    /* D31 */       MAKE_PIN_CLASS(31, 10, 0, 0),
    /* D32 */       MAKE_PIN_CLASS(32, 14, 0, 0),
    /* D34 */       MAKE_PIN_CLASS(34, 11, 0, 0),
};

const PinClass const _spiclass[] STORED = {
    /* MOSI0 */ MAKE_PIN_CLASS(2, 3, 0, 6),
    /* MISO0 */ MAKE_PIN_CLASS(3, 3, 0, 6),
    /* SCLK0 */ MAKE_PIN_CLASS(4, 3, 0, 6),
    /* MOSI1 */ MAKE_PIN_CLASS(11, 1, 0, 5),
    /* MISO1 */ MAKE_PIN_CLASS(12, 1, 0, 5),
    /* SCLK1 */ MAKE_PIN_CLASS(13, 1, 0, 5),
    /* MOSI2 */ MAKE_PIN_CLASS(39, 2, 0, 5),
    /* MISO2 */ MAKE_PIN_CLASS(38, 2, 0, 5),
    /* SCLK2 */ MAKE_PIN_CLASS(37, 2, 0, 5),

};

const PinClass const _i2cclass[] STORED = {
    /* SDA0 */ MAKE_PIN_CLASS(14, 1, 0, 4),
    /* SCL0 */ MAKE_PIN_CLASS(15, 1, 0, 4),
};


//phys, timer, channel, afio
const PinClass const _pwmclass[] STORED = {
    /* PWM0 */ MAKE_PIN_CLASS(0, 1, 3, 1),
    /* PWM1 */ MAKE_PIN_CLASS(1, 1, 2, 1),
    /* PWM2 */ MAKE_PIN_CLASS(2, 3, 2, 2),
    /* PWM3 */ MAKE_PIN_CLASS(3, 3, 1, 2),
    /* PWM4 */ MAKE_PIN_CLASS(4, 2, 2, 1),
    /* PWM5 */ MAKE_PIN_CLASS(5, 2, 1, 1),
    /* PWM6 */ MAKE_PIN_CLASS(9, 5, 1, 2),
    /* PWM7 */ MAKE_PIN_CLASS(11, 3, 2, 2),
    /* PWM8 */ MAKE_PIN_CLASS(12, 3, 1, 2),
    /* PWM9 */ MAKE_PIN_CLASS(14, 4, 2, 2),
    /* PWM10 */ MAKE_PIN_CLASS(15, 4, 1, 2),
    /* PWM11 */ MAKE_PIN_CLASS(16, 2, 2, 1),
    /* PWM12 */ MAKE_PIN_CLASS(17, 2, 3, 1),
    /* PWM13 */ MAKE_PIN_CLASS(18, 2, 4, 1),
    /* PWM14 */ MAKE_PIN_CLASS(29, 3, 3, 2),
    /* PWM15 */ MAKE_PIN_CLASS(30, 3, 4, 2),
};


const PinClass const _icuclass[] STORED = {
    /* PWM0 */ MAKE_PIN_CLASS(0, 1, 3, 1),
    /* PWM1 */ MAKE_PIN_CLASS(1, 1, 2, 1),
    /* PWM2 */ MAKE_PIN_CLASS(2, 3, 2, 2),
    /* PWM3 */ MAKE_PIN_CLASS(3, 3, 1, 2),
    /* PWM4 */ MAKE_PIN_CLASS(4, 2, 2, 1),
    /* PWM5 */ MAKE_PIN_CLASS(5, 2, 1, 1),
    /* PWM6 */ MAKE_PIN_CLASS(9, 5, 1, 2),
    /* PWM7 */ MAKE_PIN_CLASS(11, 3, 2, 2),
    /* PWM8 */ MAKE_PIN_CLASS(12, 3, 1, 2),
    /* PWM9 */ MAKE_PIN_CLASS(14, 4, 2, 2),
    /* PWM10 */ MAKE_PIN_CLASS(15, 4, 1, 2),
    /* PWM14 */ MAKE_PIN_CLASS(29, 3, 3, 2),
    /* PWM15 */ MAKE_PIN_CLASS(30, 3, 4, 2),
};

const PinClass const _canclass[] STORED = {
};

const PinClass const _serclass[] STORED = {
    /* RX0 */ MAKE_PIN_CLASS(41, 0, 0, 10),
    /* TX0 */ MAKE_PIN_CLASS(42, 1, 0, 10),
    /* RX1 */ MAKE_PIN_CLASS(0, 1, 0, 7),
    /* TX1 */ MAKE_PIN_CLASS(1, 1, 0, 7),
    /* RX2 */ MAKE_PIN_CLASS(14, 1, 0, 7),
    /* TX2 */ MAKE_PIN_CLASS(15, 1, 0, 7),

};

const PinClass const _dacclass[] STORED = {
    /* DAC0 */ MAKE_PIN_CLASS(8, 0, 0, 0),
    /* DAC1 */ MAKE_PIN_CLASS(13, 1, 0, 0),

};

const PinClass const _ledclass[] STORED = {
    /* LED0 */ MAKE_PIN_CLASS(16, 0, 0, 0),
    /* LED1 */ MAKE_PIN_CLASS(17, 0, 0, 0),
    /* LED2 */ MAKE_PIN_CLASS(18, 0, 0, 0),
    /* LED3 */ MAKE_PIN_CLASS(7, 0, 0, 0),
};

const PinClass const _btnclass[] STORED = {
    /* BTN0 */ MAKE_PIN_CLASS(28, 0, 0, 0)
};
